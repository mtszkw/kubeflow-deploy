digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_iam_group.group_KubeflowDevelopers (expand)" [label = "aws_iam_group.group_KubeflowDevelopers", shape = "box"]
		"[root] aws_iam_group_policy_attachment.attach_EksAllAccess_to_group (expand)" [label = "aws_iam_group_policy_attachment.attach_EksAllAccess_to_group", shape = "box"]
		"[root] aws_iam_group_policy_attachment.attach_IamFullKF_to_group (expand)" [label = "aws_iam_group_policy_attachment.attach_IamFullKF_to_group", shape = "box"]
		"[root] aws_iam_group_policy_attachment.attach_IamLimited_to_group (expand)" [label = "aws_iam_group_policy_attachment.attach_IamLimited_to_group", shape = "box"]
		"[root] aws_iam_policy.policy_EksAllAccess (expand)" [label = "aws_iam_policy.policy_EksAllAccess", shape = "box"]
		"[root] aws_iam_policy.policy_IamFullAccessKubeflow (expand)" [label = "aws_iam_policy.policy_IamFullAccessKubeflow", shape = "box"]
		"[root] aws_iam_policy.policy_IamLimitedAccess (expand)" [label = "aws_iam_policy.policy_IamLimitedAccess", shape = "box"]
		"[root] data.aws_availability_zones.available (expand)" [label = "data.aws_availability_zones.available", shape = "box"]
		"[root] data.aws_caller_identity.current (expand)" [label = "data.aws_caller_identity.current", shape = "box"]
		"[root] data.aws_eks_cluster.cluster (expand)" [label = "data.aws_eks_cluster.cluster", shape = "box"]
		"[root] data.aws_eks_cluster_auth.cluster (expand)" [label = "data.aws_eks_cluster_auth.cluster", shape = "box"]
		"[root] module.eks.aws_autoscaling_group.workers (expand)" [label = "module.eks.aws_autoscaling_group.workers", shape = "box"]
		"[root] module.eks.aws_autoscaling_group.workers_launch_template (expand)" [label = "module.eks.aws_autoscaling_group.workers_launch_template", shape = "box"]
		"[root] module.eks.aws_cloudwatch_log_group.this (expand)" [label = "module.eks.aws_cloudwatch_log_group.this", shape = "box"]
		"[root] module.eks.aws_eks_cluster.this (expand)" [label = "module.eks.aws_eks_cluster.this", shape = "box"]
		"[root] module.eks.aws_iam_instance_profile.workers (expand)" [label = "module.eks.aws_iam_instance_profile.workers", shape = "box"]
		"[root] module.eks.aws_iam_instance_profile.workers_launch_template (expand)" [label = "module.eks.aws_iam_instance_profile.workers_launch_template", shape = "box"]
		"[root] module.eks.aws_iam_openid_connect_provider.oidc_provider (expand)" [label = "module.eks.aws_iam_openid_connect_provider.oidc_provider", shape = "box"]
		"[root] module.eks.aws_iam_policy.cluster_elb_sl_role_creation (expand)" [label = "module.eks.aws_iam_policy.cluster_elb_sl_role_creation", shape = "box"]
		"[root] module.eks.aws_iam_role.cluster (expand)" [label = "module.eks.aws_iam_role.cluster", shape = "box"]
		"[root] module.eks.aws_iam_role.workers (expand)" [label = "module.eks.aws_iam_role.workers", shape = "box"]
		"[root] module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy (expand)" [label = "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy", shape = "box"]
		"[root] module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy (expand)" [label = "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy", shape = "box"]
		"[root] module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy (expand)" [label = "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy", shape = "box"]
		"[root] module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation (expand)" [label = "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation", shape = "box"]
		"[root] module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly (expand)" [label = "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly", shape = "box"]
		"[root] module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy (expand)" [label = "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy", shape = "box"]
		"[root] module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy (expand)" [label = "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy", shape = "box"]
		"[root] module.eks.aws_iam_role_policy_attachment.workers_additional_policies (expand)" [label = "module.eks.aws_iam_role_policy_attachment.workers_additional_policies", shape = "box"]
		"[root] module.eks.aws_launch_configuration.workers (expand)" [label = "module.eks.aws_launch_configuration.workers", shape = "box"]
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" [label = "module.eks.aws_launch_template.workers_launch_template", shape = "box"]
		"[root] module.eks.aws_security_group.cluster (expand)" [label = "module.eks.aws_security_group.cluster", shape = "box"]
		"[root] module.eks.aws_security_group.workers (expand)" [label = "module.eks.aws_security_group.workers", shape = "box"]
		"[root] module.eks.aws_security_group_rule.cluster_egress_internet (expand)" [label = "module.eks.aws_security_group_rule.cluster_egress_internet", shape = "box"]
		"[root] module.eks.aws_security_group_rule.cluster_https_worker_ingress (expand)" [label = "module.eks.aws_security_group_rule.cluster_https_worker_ingress", shape = "box"]
		"[root] module.eks.aws_security_group_rule.cluster_primary_ingress_workers (expand)" [label = "module.eks.aws_security_group_rule.cluster_primary_ingress_workers", shape = "box"]
		"[root] module.eks.aws_security_group_rule.cluster_private_access (expand)" [label = "module.eks.aws_security_group_rule.cluster_private_access", shape = "box"]
		"[root] module.eks.aws_security_group_rule.workers_egress_internet (expand)" [label = "module.eks.aws_security_group_rule.workers_egress_internet", shape = "box"]
		"[root] module.eks.aws_security_group_rule.workers_ingress_cluster (expand)" [label = "module.eks.aws_security_group_rule.workers_ingress_cluster", shape = "box"]
		"[root] module.eks.aws_security_group_rule.workers_ingress_cluster_https (expand)" [label = "module.eks.aws_security_group_rule.workers_ingress_cluster_https", shape = "box"]
		"[root] module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet (expand)" [label = "module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet", shape = "box"]
		"[root] module.eks.aws_security_group_rule.workers_ingress_cluster_primary (expand)" [label = "module.eks.aws_security_group_rule.workers_ingress_cluster_primary", shape = "box"]
		"[root] module.eks.aws_security_group_rule.workers_ingress_self (expand)" [label = "module.eks.aws_security_group_rule.workers_ingress_self", shape = "box"]
		"[root] module.eks.data.aws_ami.eks_worker (expand)" [label = "module.eks.data.aws_ami.eks_worker", shape = "box"]
		"[root] module.eks.data.aws_ami.eks_worker_windows (expand)" [label = "module.eks.data.aws_ami.eks_worker_windows", shape = "box"]
		"[root] module.eks.data.aws_caller_identity.current (expand)" [label = "module.eks.data.aws_caller_identity.current", shape = "box"]
		"[root] module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile (expand)" [label = "module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile", shape = "box"]
		"[root] module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile (expand)" [label = "module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile", shape = "box"]
		"[root] module.eks.data.aws_iam_policy_document.cluster_assume_role_policy (expand)" [label = "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy", shape = "box"]
		"[root] module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation (expand)" [label = "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation", shape = "box"]
		"[root] module.eks.data.aws_iam_policy_document.workers_assume_role_policy (expand)" [label = "module.eks.data.aws_iam_policy_document.workers_assume_role_policy", shape = "box"]
		"[root] module.eks.data.aws_iam_role.custom_cluster_iam_role (expand)" [label = "module.eks.data.aws_iam_role.custom_cluster_iam_role", shape = "box"]
		"[root] module.eks.data.aws_partition.current (expand)" [label = "module.eks.data.aws_partition.current", shape = "box"]
		"[root] module.eks.data.template_file.launch_template_userdata (expand)" [label = "module.eks.data.template_file.launch_template_userdata", shape = "box"]
		"[root] module.eks.data.template_file.userdata (expand)" [label = "module.eks.data.template_file.userdata", shape = "box"]
		"[root] module.eks.kubernetes_config_map.aws_auth (expand)" [label = "module.eks.kubernetes_config_map.aws_auth", shape = "box"]
		"[root] module.eks.local_file.kubeconfig (expand)" [label = "module.eks.local_file.kubeconfig", shape = "box"]
		"[root] module.eks.module.fargate.aws_eks_fargate_profile.this (expand)" [label = "module.eks.module.fargate.aws_eks_fargate_profile.this", shape = "box"]
		"[root] module.eks.module.fargate.aws_iam_role.eks_fargate_pod (expand)" [label = "module.eks.module.fargate.aws_iam_role.eks_fargate_pod", shape = "box"]
		"[root] module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod (expand)" [label = "module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod", shape = "box"]
		"[root] module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role (expand)" [label = "module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role", shape = "box"]
		"[root] module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role (expand)" [label = "module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role", shape = "box"]
		"[root] module.eks.module.node_groups.aws_eks_node_group.workers (expand)" [label = "module.eks.module.node_groups.aws_eks_node_group.workers", shape = "box"]
		"[root] module.eks.module.node_groups.random_pet.node_groups (expand)" [label = "module.eks.module.node_groups.random_pet.node_groups", shape = "box"]
		"[root] module.eks.null_resource.wait_for_cluster (expand)" [label = "module.eks.null_resource.wait_for_cluster", shape = "box"]
		"[root] module.eks.random_pet.workers (expand)" [label = "module.eks.random_pet.workers", shape = "box"]
		"[root] module.eks.random_pet.workers_launch_template (expand)" [label = "module.eks.random_pet.workers_launch_template", shape = "box"]
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" [label = "module.vpc.aws_cloudwatch_log_group.flow_log", shape = "box"]
		"[root] module.vpc.aws_customer_gateway.this (expand)" [label = "module.vpc.aws_customer_gateway.this", shape = "box"]
		"[root] module.vpc.aws_db_subnet_group.database (expand)" [label = "module.vpc.aws_db_subnet_group.database", shape = "box"]
		"[root] module.vpc.aws_default_network_acl.this (expand)" [label = "module.vpc.aws_default_network_acl.this", shape = "box"]
		"[root] module.vpc.aws_default_route_table.default (expand)" [label = "module.vpc.aws_default_route_table.default", shape = "box"]
		"[root] module.vpc.aws_default_security_group.this (expand)" [label = "module.vpc.aws_default_security_group.this", shape = "box"]
		"[root] module.vpc.aws_default_vpc.this (expand)" [label = "module.vpc.aws_default_vpc.this", shape = "box"]
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" [label = "module.vpc.aws_egress_only_internet_gateway.this", shape = "box"]
		"[root] module.vpc.aws_eip.nat (expand)" [label = "module.vpc.aws_eip.nat", shape = "box"]
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" [label = "module.vpc.aws_elasticache_subnet_group.elasticache", shape = "box"]
		"[root] module.vpc.aws_flow_log.this (expand)" [label = "module.vpc.aws_flow_log.this", shape = "box"]
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_internet_gateway.this (expand)" [label = "module.vpc.aws_internet_gateway.this", shape = "box"]
		"[root] module.vpc.aws_nat_gateway.this (expand)" [label = "module.vpc.aws_nat_gateway.this", shape = "box"]
		"[root] module.vpc.aws_network_acl.database (expand)" [label = "module.vpc.aws_network_acl.database", shape = "box"]
		"[root] module.vpc.aws_network_acl.elasticache (expand)" [label = "module.vpc.aws_network_acl.elasticache", shape = "box"]
		"[root] module.vpc.aws_network_acl.intra (expand)" [label = "module.vpc.aws_network_acl.intra", shape = "box"]
		"[root] module.vpc.aws_network_acl.outpost (expand)" [label = "module.vpc.aws_network_acl.outpost", shape = "box"]
		"[root] module.vpc.aws_network_acl.private (expand)" [label = "module.vpc.aws_network_acl.private", shape = "box"]
		"[root] module.vpc.aws_network_acl.public (expand)" [label = "module.vpc.aws_network_acl.public", shape = "box"]
		"[root] module.vpc.aws_network_acl.redshift (expand)" [label = "module.vpc.aws_network_acl.redshift", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.database_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.database_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.elasticache_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.elasticache_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.intra_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.intra_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.outpost_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.outpost_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.private_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.private_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.public_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.public_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.redshift_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.redshift_outbound", shape = "box"]
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" [label = "module.vpc.aws_redshift_subnet_group.redshift", shape = "box"]
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" [label = "module.vpc.aws_route.database_internet_gateway", shape = "box"]
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" [label = "module.vpc.aws_route.database_ipv6_egress", shape = "box"]
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" [label = "module.vpc.aws_route.database_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" [label = "module.vpc.aws_route.private_ipv6_egress", shape = "box"]
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" [label = "module.vpc.aws_route.private_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" [label = "module.vpc.aws_route.public_internet_gateway", shape = "box"]
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" [label = "module.vpc.aws_route.public_internet_gateway_ipv6", shape = "box"]
		"[root] module.vpc.aws_route_table.database (expand)" [label = "module.vpc.aws_route_table.database", shape = "box"]
		"[root] module.vpc.aws_route_table.elasticache (expand)" [label = "module.vpc.aws_route_table.elasticache", shape = "box"]
		"[root] module.vpc.aws_route_table.intra (expand)" [label = "module.vpc.aws_route_table.intra", shape = "box"]
		"[root] module.vpc.aws_route_table.private (expand)" [label = "module.vpc.aws_route_table.private", shape = "box"]
		"[root] module.vpc.aws_route_table.public (expand)" [label = "module.vpc.aws_route_table.public", shape = "box"]
		"[root] module.vpc.aws_route_table.redshift (expand)" [label = "module.vpc.aws_route_table.redshift", shape = "box"]
		"[root] module.vpc.aws_route_table_association.database (expand)" [label = "module.vpc.aws_route_table_association.database", shape = "box"]
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" [label = "module.vpc.aws_route_table_association.elasticache", shape = "box"]
		"[root] module.vpc.aws_route_table_association.intra (expand)" [label = "module.vpc.aws_route_table_association.intra", shape = "box"]
		"[root] module.vpc.aws_route_table_association.outpost (expand)" [label = "module.vpc.aws_route_table_association.outpost", shape = "box"]
		"[root] module.vpc.aws_route_table_association.private (expand)" [label = "module.vpc.aws_route_table_association.private", shape = "box"]
		"[root] module.vpc.aws_route_table_association.public (expand)" [label = "module.vpc.aws_route_table_association.public", shape = "box"]
		"[root] module.vpc.aws_route_table_association.redshift (expand)" [label = "module.vpc.aws_route_table_association.redshift", shape = "box"]
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" [label = "module.vpc.aws_route_table_association.redshift_public", shape = "box"]
		"[root] module.vpc.aws_subnet.database (expand)" [label = "module.vpc.aws_subnet.database", shape = "box"]
		"[root] module.vpc.aws_subnet.elasticache (expand)" [label = "module.vpc.aws_subnet.elasticache", shape = "box"]
		"[root] module.vpc.aws_subnet.intra (expand)" [label = "module.vpc.aws_subnet.intra", shape = "box"]
		"[root] module.vpc.aws_subnet.outpost (expand)" [label = "module.vpc.aws_subnet.outpost", shape = "box"]
		"[root] module.vpc.aws_subnet.private (expand)" [label = "module.vpc.aws_subnet.private", shape = "box"]
		"[root] module.vpc.aws_subnet.public (expand)" [label = "module.vpc.aws_subnet.public", shape = "box"]
		"[root] module.vpc.aws_subnet.redshift (expand)" [label = "module.vpc.aws_subnet.redshift", shape = "box"]
		"[root] module.vpc.aws_vpc.this (expand)" [label = "module.vpc.aws_vpc.this", shape = "box"]
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" [label = "module.vpc.aws_vpc_dhcp_options.this", shape = "box"]
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" [label = "module.vpc.aws_vpc_dhcp_options_association.this", shape = "box"]
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" [label = "module.vpc.aws_vpc_ipv4_cidr_block_association.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway.this (expand)" [label = "module.vpc.aws_vpn_gateway.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" [label = "module.vpc.aws_vpn_gateway_attachment.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.intra", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.private", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.public", shape = "box"]
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" [label = "module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role", shape = "box"]
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] output.eks_cluster_iam_role_arn" [label = "output.eks_cluster_iam_role_arn", shape = "note"]
		"[root] output.eks_cluster_iam_role_name" [label = "output.eks_cluster_iam_role_name", shape = "note"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/kubernetes\"]" [label = "provider[\"registry.terraform.io/hashicorp/kubernetes\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/local\"]" [label = "provider[\"registry.terraform.io/hashicorp/local\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/null\"]" [label = "provider[\"registry.terraform.io/hashicorp/null\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/random\"]" [label = "provider[\"registry.terraform.io/hashicorp/random\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/template\"]" [label = "provider[\"registry.terraform.io/hashicorp/template\"]", shape = "diamond"]
		"[root] var.aws_cluster_name" [label = "var.aws_cluster_name", shape = "note"]
		"[root] var.aws_profile" [label = "var.aws_profile", shape = "note"]
		"[root] var.aws_region" [label = "var.aws_region", shape = "note"]
		"[root] aws_iam_group.group_KubeflowDevelopers (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_iam_group_policy_attachment.attach_EksAllAccess_to_group (expand)" -> "[root] aws_iam_group.group_KubeflowDevelopers (expand)"
		"[root] aws_iam_group_policy_attachment.attach_EksAllAccess_to_group (expand)" -> "[root] aws_iam_policy.policy_EksAllAccess (expand)"
		"[root] aws_iam_group_policy_attachment.attach_IamFullKF_to_group (expand)" -> "[root] aws_iam_group.group_KubeflowDevelopers (expand)"
		"[root] aws_iam_group_policy_attachment.attach_IamFullKF_to_group (expand)" -> "[root] aws_iam_policy.policy_IamFullAccessKubeflow (expand)"
		"[root] aws_iam_group_policy_attachment.attach_IamLimited_to_group (expand)" -> "[root] aws_iam_group.group_KubeflowDevelopers (expand)"
		"[root] aws_iam_group_policy_attachment.attach_IamLimited_to_group (expand)" -> "[root] aws_iam_policy.policy_IamLimitedAccess (expand)"
		"[root] aws_iam_policy.policy_EksAllAccess (expand)" -> "[root] local.account_id (expand)"
		"[root] aws_iam_policy.policy_IamFullAccessKubeflow (expand)" -> "[root] local.account_id (expand)"
		"[root] aws_iam_policy.policy_IamLimitedAccess (expand)" -> "[root] local.account_id (expand)"
		"[root] data.aws_availability_zones.available (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_caller_identity.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_eks_cluster.cluster (expand)" -> "[root] module.eks.output.cluster_id (expand)"
		"[root] data.aws_eks_cluster_auth.cluster (expand)" -> "[root] module.eks.output.cluster_id (expand)"
		"[root] local.account_id (expand)" -> "[root] data.aws_caller_identity.current (expand)"
		"[root] local.cluster_name (expand)" -> "[root] var.aws_cluster_name"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_group_policy_attachment.attach_EksAllAccess_to_group (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_group_policy_attachment.attach_IamFullKF_to_group (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_iam_group_policy_attachment.attach_IamLimited_to_group (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.eks (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.vpc (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.eks_cluster_iam_role_arn"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.eks_cluster_iam_role_name"
		"[root] module.eks (close)" -> "[root] module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.module.fargate (close)"
		"[root] module.eks (close)" -> "[root] module.eks.module.node_groups (close)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cloudwatch_log_group_arn (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cloudwatch_log_group_name (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_arn (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_certificate_authority_data (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_endpoint (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_iam_role_arn (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_iam_role_name (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_oidc_issuer_url (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_primary_security_group_id (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_security_group_id (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_version (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.config_map_aws_auth (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.fargate_iam_role_arn (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.fargate_iam_role_name (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.fargate_profile_arns (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.fargate_profile_ids (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.kubeconfig (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.kubeconfig_filename (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.node_groups (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.oidc_provider_arn (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.security_group_rule_cluster_https_worker_ingress (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.worker_iam_instance_profile_arns (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.worker_iam_instance_profile_names (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.worker_iam_role_arn (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.worker_iam_role_name (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.worker_security_group_id (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.workers_asg_arns (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.workers_asg_names (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.workers_default_ami_id (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.workers_launch_template_arns (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.workers_launch_template_ids (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.workers_launch_template_latest_versions (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.workers_user_data (expand)"
		"[root] module.eks.aws_autoscaling_group.workers (expand)" -> "[root] module.eks.random_pet.workers (expand)"
		"[root] module.eks.aws_autoscaling_group.workers (expand)" -> "[root] module.eks.var.worker_create_initial_lifecycle_hooks (expand)"
		"[root] module.eks.aws_autoscaling_group.workers_launch_template (expand)" -> "[root] module.eks.random_pet.workers_launch_template (expand)"
		"[root] module.eks.aws_autoscaling_group.workers_launch_template (expand)" -> "[root] module.eks.var.worker_create_initial_lifecycle_hooks (expand)"
		"[root] module.eks.aws_cloudwatch_log_group.this (expand)" -> "[root] module.eks.var.cluster_enabled_log_types (expand)"
		"[root] module.eks.aws_cloudwatch_log_group.this (expand)" -> "[root] module.eks.var.cluster_log_kms_key_id (expand)"
		"[root] module.eks.aws_cloudwatch_log_group.this (expand)" -> "[root] module.eks.var.cluster_log_retention_in_days (expand)"
		"[root] module.eks.aws_cloudwatch_log_group.this (expand)" -> "[root] module.eks.var.cluster_name (expand)"
		"[root] module.eks.aws_cloudwatch_log_group.this (expand)" -> "[root] module.eks.var.create_eks (expand)"
		"[root] module.eks.aws_cloudwatch_log_group.this (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.aws_cloudwatch_log_group.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.aws_cloudwatch_log_group.this (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.aws_security_group_rule.cluster_egress_internet (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.aws_security_group_rule.cluster_https_worker_ingress (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.local.cluster_iam_role_arn (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_create_timeout (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_delete_timeout (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_encryption_config (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_endpoint_private_access (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_endpoint_public_access (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_endpoint_public_access_cidrs (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_service_ipv4_cidr (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.cluster_version (expand)"
		"[root] module.eks.aws_eks_cluster.this (expand)" -> "[root] module.eks.var.subnets (expand)"
		"[root] module.eks.aws_iam_instance_profile.workers (expand)" -> "[root] module.eks.local.default_iam_role_id (expand)"
		"[root] module.eks.aws_iam_instance_profile.workers (expand)" -> "[root] module.eks.local.worker_group_count (expand)"
		"[root] module.eks.aws_iam_instance_profile.workers_launch_template (expand)" -> "[root] module.eks.local.default_iam_role_id (expand)"
		"[root] module.eks.aws_iam_instance_profile.workers_launch_template (expand)" -> "[root] module.eks.local.worker_group_launch_template_count (expand)"
		"[root] module.eks.aws_iam_openid_connect_provider.oidc_provider (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.aws_iam_openid_connect_provider.oidc_provider (expand)" -> "[root] module.eks.local.sts_principal (expand)"
		"[root] module.eks.aws_iam_openid_connect_provider.oidc_provider (expand)" -> "[root] module.eks.var.eks_oidc_root_ca_thumbprint (expand)"
		"[root] module.eks.aws_iam_openid_connect_provider.oidc_provider (expand)" -> "[root] module.eks.var.enable_irsa (expand)"
		"[root] module.eks.aws_iam_policy.cluster_elb_sl_role_creation (expand)" -> "[root] module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation (expand)"
		"[root] module.eks.aws_iam_policy.cluster_elb_sl_role_creation (expand)" -> "[root] module.eks.var.cluster_name (expand)"
		"[root] module.eks.aws_iam_policy.cluster_elb_sl_role_creation (expand)" -> "[root] module.eks.var.iam_path (expand)"
		"[root] module.eks.aws_iam_role.cluster (expand)" -> "[root] module.eks.data.aws_iam_policy_document.cluster_assume_role_policy (expand)"
		"[root] module.eks.aws_iam_role.cluster (expand)" -> "[root] module.eks.var.cluster_name (expand)"
		"[root] module.eks.aws_iam_role.cluster (expand)" -> "[root] module.eks.var.create_eks (expand)"
		"[root] module.eks.aws_iam_role.cluster (expand)" -> "[root] module.eks.var.iam_path (expand)"
		"[root] module.eks.aws_iam_role.cluster (expand)" -> "[root] module.eks.var.manage_cluster_iam_resources (expand)"
		"[root] module.eks.aws_iam_role.cluster (expand)" -> "[root] module.eks.var.permissions_boundary (expand)"
		"[root] module.eks.aws_iam_role.cluster (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.aws_iam_role.workers (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.aws_iam_role.workers (expand)" -> "[root] module.eks.data.aws_iam_policy_document.workers_assume_role_policy (expand)"
		"[root] module.eks.aws_iam_role.workers (expand)" -> "[root] module.eks.var.manage_worker_iam_resources (expand)"
		"[root] module.eks.aws_iam_role.workers (expand)" -> "[root] module.eks.var.workers_role_name (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy (expand)" -> "[root] module.eks.local.cluster_iam_role_name (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy (expand)" -> "[root] module.eks.local.policy_arn_prefix (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy (expand)" -> "[root] module.eks.local.cluster_iam_role_name (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy (expand)" -> "[root] module.eks.local.policy_arn_prefix (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy (expand)" -> "[root] module.eks.local.cluster_iam_role_name (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy (expand)" -> "[root] module.eks.local.policy_arn_prefix (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation (expand)" -> "[root] module.eks.aws_iam_policy.cluster_elb_sl_role_creation (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation (expand)" -> "[root] module.eks.local.cluster_iam_role_name (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly (expand)" -> "[root] module.eks.aws_iam_role.workers (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy (expand)" -> "[root] module.eks.aws_iam_role.workers (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy (expand)" -> "[root] module.eks.aws_iam_role.workers (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy (expand)" -> "[root] module.eks.var.attach_worker_cni_policy (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.workers_additional_policies (expand)" -> "[root] module.eks.aws_iam_role.workers (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.workers_additional_policies (expand)" -> "[root] module.eks.var.workers_additional_policies (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.aws_iam_instance_profile.workers (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.workers_additional_policies (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.aws_security_group_rule.cluster_primary_ingress_workers (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.aws_security_group_rule.workers_egress_internet (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.aws_security_group_rule.workers_ingress_cluster (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.aws_security_group_rule.workers_ingress_cluster_https (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.aws_security_group_rule.workers_ingress_cluster_primary (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.aws_security_group_rule.workers_ingress_self (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.data.template_file.userdata (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.local.default_ami_id_linux (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.local.default_ami_id_windows (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.local.ebs_optimized_not_supported (expand)"
		"[root] module.eks.aws_launch_configuration.workers (expand)" -> "[root] module.eks.var.worker_additional_security_group_ids (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.aws_iam_instance_profile.workers_launch_template (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.workers_additional_policies (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.aws_security_group_rule.cluster_primary_ingress_workers (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.aws_security_group_rule.workers_egress_internet (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.aws_security_group_rule.workers_ingress_cluster (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.aws_security_group_rule.workers_ingress_cluster_https (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.aws_security_group_rule.workers_ingress_cluster_primary (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.aws_security_group_rule.workers_ingress_self (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.data.template_file.launch_template_userdata (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.local.default_ami_id_linux (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.local.default_ami_id_windows (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.local.ebs_optimized_not_supported (expand)"
		"[root] module.eks.aws_launch_template.workers_launch_template (expand)" -> "[root] module.eks.var.worker_additional_security_group_ids (expand)"
		"[root] module.eks.aws_security_group.cluster (expand)" -> "[root] module.eks.var.cluster_create_security_group (expand)"
		"[root] module.eks.aws_security_group.cluster (expand)" -> "[root] module.eks.var.cluster_name (expand)"
		"[root] module.eks.aws_security_group.cluster (expand)" -> "[root] module.eks.var.create_eks (expand)"
		"[root] module.eks.aws_security_group.cluster (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.aws_security_group.cluster (expand)" -> "[root] module.eks.var.vpc_id (expand)"
		"[root] module.eks.aws_security_group.workers (expand)" -> "[root] module.eks.var.cluster_name (expand)"
		"[root] module.eks.aws_security_group.workers (expand)" -> "[root] module.eks.var.create_eks (expand)"
		"[root] module.eks.aws_security_group.workers (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.aws_security_group.workers (expand)" -> "[root] module.eks.var.vpc_id (expand)"
		"[root] module.eks.aws_security_group.workers (expand)" -> "[root] module.eks.var.worker_create_security_group (expand)"
		"[root] module.eks.aws_security_group_rule.cluster_egress_internet (expand)" -> "[root] module.eks.local.cluster_security_group_id (expand)"
		"[root] module.eks.aws_security_group_rule.cluster_https_worker_ingress (expand)" -> "[root] module.eks.local.cluster_security_group_id (expand)"
		"[root] module.eks.aws_security_group_rule.cluster_https_worker_ingress (expand)" -> "[root] module.eks.local.worker_security_group_id (expand)"
		"[root] module.eks.aws_security_group_rule.cluster_primary_ingress_workers (expand)" -> "[root] module.eks.local.cluster_primary_security_group_id (expand)"
		"[root] module.eks.aws_security_group_rule.cluster_primary_ingress_workers (expand)" -> "[root] module.eks.var.worker_create_cluster_primary_security_group_rules (expand)"
		"[root] module.eks.aws_security_group_rule.cluster_private_access (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.aws_security_group_rule.cluster_private_access (expand)" -> "[root] module.eks.var.cluster_create_endpoint_private_access_sg_rule (expand)"
		"[root] module.eks.aws_security_group_rule.cluster_private_access (expand)" -> "[root] module.eks.var.cluster_endpoint_private_access_cidrs (expand)"
		"[root] module.eks.aws_security_group_rule.workers_egress_internet (expand)" -> "[root] module.eks.local.worker_security_group_id (expand)"
		"[root] module.eks.aws_security_group_rule.workers_ingress_cluster (expand)" -> "[root] module.eks.local.cluster_security_group_id (expand)"
		"[root] module.eks.aws_security_group_rule.workers_ingress_cluster (expand)" -> "[root] module.eks.local.worker_security_group_id (expand)"
		"[root] module.eks.aws_security_group_rule.workers_ingress_cluster (expand)" -> "[root] module.eks.var.worker_sg_ingress_from_port (expand)"
		"[root] module.eks.aws_security_group_rule.workers_ingress_cluster_https (expand)" -> "[root] module.eks.local.cluster_security_group_id (expand)"
		"[root] module.eks.aws_security_group_rule.workers_ingress_cluster_https (expand)" -> "[root] module.eks.local.worker_security_group_id (expand)"
		"[root] module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet (expand)" -> "[root] module.eks.local.cluster_security_group_id (expand)"
		"[root] module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet (expand)" -> "[root] module.eks.local.worker_security_group_id (expand)"
		"[root] module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet (expand)" -> "[root] module.eks.var.worker_sg_ingress_from_port (expand)"
		"[root] module.eks.aws_security_group_rule.workers_ingress_cluster_primary (expand)" -> "[root] module.eks.local.cluster_primary_security_group_id (expand)"
		"[root] module.eks.aws_security_group_rule.workers_ingress_cluster_primary (expand)" -> "[root] module.eks.var.worker_create_cluster_primary_security_group_rules (expand)"
		"[root] module.eks.aws_security_group_rule.workers_ingress_self (expand)" -> "[root] module.eks.local.worker_security_group_id (expand)"
		"[root] module.eks.data.aws_ami.eks_worker (expand)" -> "[root] module.eks.local.worker_ami_name_filter (expand)"
		"[root] module.eks.data.aws_ami.eks_worker (expand)" -> "[root] module.eks.var.worker_ami_owner_id (expand)"
		"[root] module.eks.data.aws_ami.eks_worker (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.data.aws_ami.eks_worker_windows (expand)" -> "[root] module.eks.local.worker_ami_name_filter_windows (expand)"
		"[root] module.eks.data.aws_ami.eks_worker_windows (expand)" -> "[root] module.eks.var.worker_ami_owner_id_windows (expand)"
		"[root] module.eks.data.aws_ami.eks_worker_windows (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.data.aws_caller_identity.current (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.data.aws_caller_identity.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile (expand)" -> "[root] module.eks.local.worker_group_count (expand)"
		"[root] module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile (expand)" -> "[root] module.eks.local.workers_group_defaults (expand)"
		"[root] module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile (expand)" -> "[root] module.eks.var.manage_worker_iam_resources (expand)"
		"[root] module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile (expand)" -> "[root] module.eks.local.worker_group_launch_template_count (expand)"
		"[root] module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile (expand)" -> "[root] module.eks.local.workers_group_defaults (expand)"
		"[root] module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile (expand)" -> "[root] module.eks.var.manage_worker_iam_resources (expand)"
		"[root] module.eks.data.aws_iam_policy_document.cluster_assume_role_policy (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.data.aws_iam_policy_document.cluster_assume_role_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation (expand)" -> "[root] module.eks.var.create_eks (expand)"
		"[root] module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation (expand)" -> "[root] module.eks.var.manage_cluster_iam_resources (expand)"
		"[root] module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.data.aws_iam_policy_document.workers_assume_role_policy (expand)" -> "[root] module.eks.local.ec2_principal (expand)"
		"[root] module.eks.data.aws_iam_role.custom_cluster_iam_role (expand)" -> "[root] module.eks.var.cluster_iam_role_name (expand)"
		"[root] module.eks.data.aws_iam_role.custom_cluster_iam_role (expand)" -> "[root] module.eks.var.manage_cluster_iam_resources (expand)"
		"[root] module.eks.data.aws_iam_role.custom_cluster_iam_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.data.aws_partition.current (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.data.aws_partition.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.data.template_file.launch_template_userdata (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.data.template_file.launch_template_userdata (expand)" -> "[root] module.eks.local.worker_group_launch_template_count (expand)"
		"[root] module.eks.data.template_file.launch_template_userdata (expand)" -> "[root] module.eks.local.workers_group_defaults (expand)"
		"[root] module.eks.data.template_file.launch_template_userdata (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/template\"]"
		"[root] module.eks.data.template_file.userdata (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.data.template_file.userdata (expand)" -> "[root] module.eks.local.worker_group_count (expand)"
		"[root] module.eks.data.template_file.userdata (expand)" -> "[root] module.eks.local.workers_group_defaults (expand)"
		"[root] module.eks.data.template_file.userdata (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/template\"]"
		"[root] module.eks.kubernetes_config_map.aws_auth (expand)" -> "[root] module.eks.local.configmap_roles (expand)"
		"[root] module.eks.kubernetes_config_map.aws_auth (expand)" -> "[root] module.eks.var.aws_auth_additional_labels (expand)"
		"[root] module.eks.kubernetes_config_map.aws_auth (expand)" -> "[root] module.eks.var.map_accounts (expand)"
		"[root] module.eks.kubernetes_config_map.aws_auth (expand)" -> "[root] module.eks.var.map_roles (expand)"
		"[root] module.eks.kubernetes_config_map.aws_auth (expand)" -> "[root] module.eks.var.map_users (expand)"
		"[root] module.eks.kubernetes_config_map.aws_auth (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
		"[root] module.eks.local.auth_launch_template_worker_roles (expand)" -> "[root] module.eks.aws_iam_instance_profile.workers_launch_template (expand)"
		"[root] module.eks.local.auth_launch_template_worker_roles (expand)" -> "[root] module.eks.data.aws_caller_identity.current (expand)"
		"[root] module.eks.local.auth_launch_template_worker_roles (expand)" -> "[root] module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile (expand)"
		"[root] module.eks.local.auth_worker_roles (expand)" -> "[root] module.eks.aws_iam_instance_profile.workers (expand)"
		"[root] module.eks.local.auth_worker_roles (expand)" -> "[root] module.eks.data.aws_caller_identity.current (expand)"
		"[root] module.eks.local.auth_worker_roles (expand)" -> "[root] module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile (expand)"
		"[root] module.eks.local.cluster_iam_role_arn (expand)" -> "[root] module.eks.aws_iam_role.cluster (expand)"
		"[root] module.eks.local.cluster_iam_role_arn (expand)" -> "[root] module.eks.data.aws_iam_role.custom_cluster_iam_role (expand)"
		"[root] module.eks.local.cluster_iam_role_name (expand)" -> "[root] module.eks.aws_iam_role.cluster (expand)"
		"[root] module.eks.local.cluster_iam_role_name (expand)" -> "[root] module.eks.var.cluster_iam_role_name (expand)"
		"[root] module.eks.local.cluster_primary_security_group_id (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.local.cluster_security_group_id (expand)" -> "[root] module.eks.aws_security_group.cluster (expand)"
		"[root] module.eks.local.cluster_security_group_id (expand)" -> "[root] module.eks.var.cluster_security_group_id (expand)"
		"[root] module.eks.local.configmap_roles (expand)" -> "[root] module.eks.local.auth_launch_template_worker_roles (expand)"
		"[root] module.eks.local.configmap_roles (expand)" -> "[root] module.eks.local.auth_worker_roles (expand)"
		"[root] module.eks.local.configmap_roles (expand)" -> "[root] module.eks.module.fargate.output.aws_auth_roles (expand)"
		"[root] module.eks.local.configmap_roles (expand)" -> "[root] module.eks.module.node_groups.output.aws_auth_roles (expand)"
		"[root] module.eks.local.default_ami_id_linux (expand)" -> "[root] module.eks.local.workers_group_defaults (expand)"
		"[root] module.eks.local.default_ami_id_windows (expand)" -> "[root] module.eks.data.aws_ami.eks_worker_windows (expand)"
		"[root] module.eks.local.default_ami_id_windows (expand)" -> "[root] module.eks.local.workers_group_defaults (expand)"
		"[root] module.eks.local.default_iam_role_id (expand)" -> "[root] module.eks.aws_iam_role.workers (expand)"
		"[root] module.eks.local.ebs_optimized_not_supported (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.local.ec2_principal (expand)" -> "[root] module.eks.data.aws_partition.current (expand)"
		"[root] module.eks.local.kubeconfig (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.local.kubeconfig (expand)" -> "[root] module.eks.local.kubeconfig_name (expand)"
		"[root] module.eks.local.kubeconfig (expand)" -> "[root] module.eks.var.kubeconfig_aws_authenticator_additional_args (expand)"
		"[root] module.eks.local.kubeconfig (expand)" -> "[root] module.eks.var.kubeconfig_aws_authenticator_command (expand)"
		"[root] module.eks.local.kubeconfig (expand)" -> "[root] module.eks.var.kubeconfig_aws_authenticator_command_args (expand)"
		"[root] module.eks.local.kubeconfig (expand)" -> "[root] module.eks.var.kubeconfig_aws_authenticator_env_variables (expand)"
		"[root] module.eks.local.kubeconfig_name (expand)" -> "[root] module.eks.var.cluster_name (expand)"
		"[root] module.eks.local.kubeconfig_name (expand)" -> "[root] module.eks.var.kubeconfig_name (expand)"
		"[root] module.eks.local.policy_arn_prefix (expand)" -> "[root] module.eks.data.aws_partition.current (expand)"
		"[root] module.eks.local.sts_principal (expand)" -> "[root] module.eks.data.aws_partition.current (expand)"
		"[root] module.eks.local.worker_ami_name_filter (expand)" -> "[root] module.eks.var.cluster_version (expand)"
		"[root] module.eks.local.worker_ami_name_filter (expand)" -> "[root] module.eks.var.worker_ami_name_filter (expand)"
		"[root] module.eks.local.worker_ami_name_filter_windows (expand)" -> "[root] module.eks.var.cluster_version (expand)"
		"[root] module.eks.local.worker_ami_name_filter_windows (expand)" -> "[root] module.eks.var.worker_ami_name_filter_windows (expand)"
		"[root] module.eks.local.worker_group_count (expand)" -> "[root] module.eks.var.worker_groups (expand)"
		"[root] module.eks.local.worker_group_launch_template_count (expand)" -> "[root] module.eks.var.worker_groups_launch_template (expand)"
		"[root] module.eks.local.worker_security_group_id (expand)" -> "[root] module.eks.aws_security_group.workers (expand)"
		"[root] module.eks.local.worker_security_group_id (expand)" -> "[root] module.eks.var.worker_security_group_id (expand)"
		"[root] module.eks.local.workers_group_defaults (expand)" -> "[root] module.eks.local.workers_group_defaults_defaults (expand)"
		"[root] module.eks.local.workers_group_defaults (expand)" -> "[root] module.eks.var.workers_group_defaults (expand)"
		"[root] module.eks.local.workers_group_defaults_defaults (expand)" -> "[root] module.eks.data.aws_ami.eks_worker (expand)"
		"[root] module.eks.local.workers_group_defaults_defaults (expand)" -> "[root] module.eks.var.subnets (expand)"
		"[root] module.eks.local_file.kubeconfig (expand)" -> "[root] module.eks.local.kubeconfig (expand)"
		"[root] module.eks.local_file.kubeconfig (expand)" -> "[root] module.eks.var.config_output_path (expand)"
		"[root] module.eks.local_file.kubeconfig (expand)" -> "[root] module.eks.var.write_kubeconfig (expand)"
		"[root] module.eks.local_file.kubeconfig (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"]"
		"[root] module.eks.module.fargate (close)" -> "[root] module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod (expand)"
		"[root] module.eks.module.fargate (close)" -> "[root] module.eks.module.fargate.output.fargate_profile_arns (expand)"
		"[root] module.eks.module.fargate (close)" -> "[root] module.eks.module.fargate.output.fargate_profile_ids (expand)"
		"[root] module.eks.module.fargate (close)" -> "[root] module.eks.module.fargate.output.iam_role_arn (expand)"
		"[root] module.eks.module.fargate (close)" -> "[root] module.eks.module.fargate.output.iam_role_name (expand)"
		"[root] module.eks.module.fargate (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.module.fargate.aws_eks_fargate_profile.this (expand)" -> "[root] module.eks.module.fargate.local.fargate_profiles_expanded (expand)"
		"[root] module.eks.module.fargate.aws_eks_fargate_profile.this (expand)" -> "[root] module.eks.module.fargate.var.eks_depends_on (expand)"
		"[root] module.eks.module.fargate.aws_eks_fargate_profile.this (expand)" -> "[root] module.eks.module.fargate.var.subnets (expand)"
		"[root] module.eks.module.fargate.aws_iam_role.eks_fargate_pod (expand)" -> "[root] module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role (expand)"
		"[root] module.eks.module.fargate.aws_iam_role.eks_fargate_pod (expand)" -> "[root] module.eks.module.fargate.var.cluster_name (expand)"
		"[root] module.eks.module.fargate.aws_iam_role.eks_fargate_pod (expand)" -> "[root] module.eks.module.fargate.var.iam_path (expand)"
		"[root] module.eks.module.fargate.aws_iam_role.eks_fargate_pod (expand)" -> "[root] module.eks.module.fargate.var.permissions_boundary (expand)"
		"[root] module.eks.module.fargate.aws_iam_role.eks_fargate_pod (expand)" -> "[root] module.eks.module.fargate.var.tags (expand)"
		"[root] module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod (expand)" -> "[root] module.eks.module.fargate.aws_iam_role.eks_fargate_pod (expand)"
		"[root] module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod (expand)" -> "[root] module.eks.module.fargate.var.iam_policy_arn_prefix (expand)"
		"[root] module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role (expand)" -> "[root] module.eks.module.fargate.local.create_eks (expand)"
		"[root] module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role (expand)" -> "[root] module.eks.module.fargate.var.create_fargate_pod_execution_role (expand)"
		"[root] module.eks.module.fargate.data.aws_iam_policy_document.eks_fargate_pod_assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role (expand)" -> "[root] module.eks.module.fargate.local.create_eks (expand)"
		"[root] module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role (expand)" -> "[root] module.eks.module.fargate.var.create_fargate_pod_execution_role (expand)"
		"[root] module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role (expand)" -> "[root] module.eks.module.fargate.var.fargate_pod_execution_role_name (expand)"
		"[root] module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.module.fargate.local.create_eks (expand)" -> "[root] module.eks.module.fargate.var.create_eks (expand)"
		"[root] module.eks.module.fargate.local.create_eks (expand)" -> "[root] module.eks.module.fargate.var.fargate_profiles (expand)"
		"[root] module.eks.module.fargate.local.fargate_profiles_expanded (expand)" -> "[root] module.eks.module.fargate.var.create_eks (expand)"
		"[root] module.eks.module.fargate.local.fargate_profiles_expanded (expand)" -> "[root] module.eks.module.fargate.var.fargate_profiles (expand)"
		"[root] module.eks.module.fargate.local.fargate_profiles_expanded (expand)" -> "[root] module.eks.module.fargate.var.tags (expand)"
		"[root] module.eks.module.fargate.local.pod_execution_role_arn (expand)" -> "[root] module.eks.module.fargate.aws_iam_role.eks_fargate_pod (expand)"
		"[root] module.eks.module.fargate.local.pod_execution_role_arn (expand)" -> "[root] module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role (expand)"
		"[root] module.eks.module.fargate.local.pod_execution_role_name (expand)" -> "[root] module.eks.module.fargate.aws_iam_role.eks_fargate_pod (expand)"
		"[root] module.eks.module.fargate.local.pod_execution_role_name (expand)" -> "[root] module.eks.module.fargate.data.aws_iam_role.custom_fargate_iam_role (expand)"
		"[root] module.eks.module.fargate.output.aws_auth_roles (expand)" -> "[root] module.eks.module.fargate.local.pod_execution_role_arn (expand)"
		"[root] module.eks.module.fargate.output.fargate_profile_arns (expand)" -> "[root] module.eks.module.fargate.aws_eks_fargate_profile.this (expand)"
		"[root] module.eks.module.fargate.output.fargate_profile_ids (expand)" -> "[root] module.eks.module.fargate.aws_eks_fargate_profile.this (expand)"
		"[root] module.eks.module.fargate.output.iam_role_arn (expand)" -> "[root] module.eks.module.fargate.local.pod_execution_role_arn (expand)"
		"[root] module.eks.module.fargate.output.iam_role_name (expand)" -> "[root] module.eks.module.fargate.local.pod_execution_role_name (expand)"
		"[root] module.eks.module.fargate.var.cluster_name (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.module.fargate.var.cluster_name (expand)" -> "[root] module.eks.module.fargate (expand)"
		"[root] module.eks.module.fargate.var.create_eks (expand)" -> "[root] module.eks.module.fargate (expand)"
		"[root] module.eks.module.fargate.var.create_eks (expand)" -> "[root] module.eks.var.create_eks (expand)"
		"[root] module.eks.module.fargate.var.create_fargate_pod_execution_role (expand)" -> "[root] module.eks.module.fargate (expand)"
		"[root] module.eks.module.fargate.var.create_fargate_pod_execution_role (expand)" -> "[root] module.eks.var.create_fargate_pod_execution_role (expand)"
		"[root] module.eks.module.fargate.var.eks_depends_on (expand)" -> "[root] module.eks.kubernetes_config_map.aws_auth (expand)"
		"[root] module.eks.module.fargate.var.fargate_pod_execution_role_name (expand)" -> "[root] module.eks.module.fargate (expand)"
		"[root] module.eks.module.fargate.var.fargate_pod_execution_role_name (expand)" -> "[root] module.eks.var.fargate_pod_execution_role_name (expand)"
		"[root] module.eks.module.fargate.var.fargate_profiles (expand)" -> "[root] module.eks.module.fargate (expand)"
		"[root] module.eks.module.fargate.var.fargate_profiles (expand)" -> "[root] module.eks.var.fargate_profiles (expand)"
		"[root] module.eks.module.fargate.var.iam_path (expand)" -> "[root] module.eks.module.fargate (expand)"
		"[root] module.eks.module.fargate.var.iam_path (expand)" -> "[root] module.eks.var.iam_path (expand)"
		"[root] module.eks.module.fargate.var.iam_policy_arn_prefix (expand)" -> "[root] module.eks.local.policy_arn_prefix (expand)"
		"[root] module.eks.module.fargate.var.iam_policy_arn_prefix (expand)" -> "[root] module.eks.module.fargate (expand)"
		"[root] module.eks.module.fargate.var.permissions_boundary (expand)" -> "[root] module.eks.module.fargate (expand)"
		"[root] module.eks.module.fargate.var.permissions_boundary (expand)" -> "[root] module.eks.var.permissions_boundary (expand)"
		"[root] module.eks.module.fargate.var.subnets (expand)" -> "[root] module.eks.module.fargate (expand)"
		"[root] module.eks.module.fargate.var.subnets (expand)" -> "[root] module.eks.var.subnets (expand)"
		"[root] module.eks.module.fargate.var.tags (expand)" -> "[root] module.eks.module.fargate (expand)"
		"[root] module.eks.module.fargate.var.tags (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.module.node_groups (close)" -> "[root] module.eks.module.node_groups.output.node_groups (expand)"
		"[root] module.eks.module.node_groups (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.module.node_groups.aws_eks_node_group.workers (expand)" -> "[root] module.eks.module.node_groups.random_pet.node_groups (expand)"
		"[root] module.eks.module.node_groups.aws_eks_node_group.workers (expand)" -> "[root] module.eks.module.node_groups.var.tags (expand)"
		"[root] module.eks.module.node_groups.local.node_groups_expanded (expand)" -> "[root] module.eks.module.node_groups.var.create_eks (expand)"
		"[root] module.eks.module.node_groups.local.node_groups_expanded (expand)" -> "[root] module.eks.module.node_groups.var.default_iam_role_arn (expand)"
		"[root] module.eks.module.node_groups.local.node_groups_expanded (expand)" -> "[root] module.eks.module.node_groups.var.node_groups (expand)"
		"[root] module.eks.module.node_groups.local.node_groups_expanded (expand)" -> "[root] module.eks.module.node_groups.var.node_groups_defaults (expand)"
		"[root] module.eks.module.node_groups.local.node_groups_expanded (expand)" -> "[root] module.eks.module.node_groups.var.workers_group_defaults (expand)"
		"[root] module.eks.module.node_groups.output.aws_auth_roles (expand)" -> "[root] module.eks.module.node_groups.local.node_groups_expanded (expand)"
		"[root] module.eks.module.node_groups.output.node_groups (expand)" -> "[root] module.eks.module.node_groups.aws_eks_node_group.workers (expand)"
		"[root] module.eks.module.node_groups.random_pet.node_groups (expand)" -> "[root] module.eks.module.node_groups.var.cluster_name (expand)"
		"[root] module.eks.module.node_groups.random_pet.node_groups (expand)" -> "[root] module.eks.module.node_groups.var.ng_depends_on (expand)"
		"[root] module.eks.module.node_groups.random_pet.node_groups (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"]"
		"[root] module.eks.module.node_groups.var.cluster_name (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.module.node_groups.var.cluster_name (expand)" -> "[root] module.eks.module.node_groups (expand)"
		"[root] module.eks.module.node_groups.var.create_eks (expand)" -> "[root] module.eks.module.node_groups (expand)"
		"[root] module.eks.module.node_groups.var.create_eks (expand)" -> "[root] module.eks.var.create_eks (expand)"
		"[root] module.eks.module.node_groups.var.default_iam_role_arn (expand)" -> "[root] module.eks.aws_iam_role.workers (expand)"
		"[root] module.eks.module.node_groups.var.default_iam_role_arn (expand)" -> "[root] module.eks.module.node_groups (expand)"
		"[root] module.eks.module.node_groups.var.ng_depends_on (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly (expand)"
		"[root] module.eks.module.node_groups.var.ng_depends_on (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy (expand)"
		"[root] module.eks.module.node_groups.var.ng_depends_on (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy (expand)"
		"[root] module.eks.module.node_groups.var.ng_depends_on (expand)" -> "[root] module.eks.kubernetes_config_map.aws_auth (expand)"
		"[root] module.eks.module.node_groups.var.node_groups (expand)" -> "[root] module.eks.module.node_groups (expand)"
		"[root] module.eks.module.node_groups.var.node_groups (expand)" -> "[root] module.eks.var.node_groups (expand)"
		"[root] module.eks.module.node_groups.var.node_groups_defaults (expand)" -> "[root] module.eks.module.node_groups (expand)"
		"[root] module.eks.module.node_groups.var.node_groups_defaults (expand)" -> "[root] module.eks.var.node_groups_defaults (expand)"
		"[root] module.eks.module.node_groups.var.tags (expand)" -> "[root] module.eks.module.node_groups (expand)"
		"[root] module.eks.module.node_groups.var.tags (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.module.node_groups.var.workers_group_defaults (expand)" -> "[root] module.eks.local.workers_group_defaults (expand)"
		"[root] module.eks.module.node_groups.var.workers_group_defaults (expand)" -> "[root] module.eks.module.node_groups (expand)"
		"[root] module.eks.null_resource.wait_for_cluster (expand)" -> "[root] module.eks.aws_security_group_rule.cluster_private_access (expand)"
		"[root] module.eks.null_resource.wait_for_cluster (expand)" -> "[root] module.eks.var.manage_aws_auth (expand)"
		"[root] module.eks.null_resource.wait_for_cluster (expand)" -> "[root] module.eks.var.wait_for_cluster_cmd (expand)"
		"[root] module.eks.null_resource.wait_for_cluster (expand)" -> "[root] module.eks.var.wait_for_cluster_interpreter (expand)"
		"[root] module.eks.null_resource.wait_for_cluster (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.eks.output.cloudwatch_log_group_arn (expand)" -> "[root] module.eks.aws_cloudwatch_log_group.this (expand)"
		"[root] module.eks.output.cloudwatch_log_group_name (expand)" -> "[root] module.eks.aws_cloudwatch_log_group.this (expand)"
		"[root] module.eks.output.cluster_arn (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.output.cluster_certificate_authority_data (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.output.cluster_endpoint (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.output.cluster_iam_role_arn (expand)" -> "[root] module.eks.local.cluster_iam_role_arn (expand)"
		"[root] module.eks.output.cluster_iam_role_name (expand)" -> "[root] module.eks.local.cluster_iam_role_name (expand)"
		"[root] module.eks.output.cluster_id (expand)" -> "[root] module.eks.null_resource.wait_for_cluster (expand)"
		"[root] module.eks.output.cluster_oidc_issuer_url (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.output.cluster_primary_security_group_id (expand)" -> "[root] module.eks.local.cluster_primary_security_group_id (expand)"
		"[root] module.eks.output.cluster_security_group_id (expand)" -> "[root] module.eks.local.cluster_security_group_id (expand)"
		"[root] module.eks.output.cluster_version (expand)" -> "[root] module.eks.aws_eks_cluster.this (expand)"
		"[root] module.eks.output.config_map_aws_auth (expand)" -> "[root] module.eks.kubernetes_config_map.aws_auth (expand)"
		"[root] module.eks.output.fargate_iam_role_arn (expand)" -> "[root] module.eks.module.fargate.output.iam_role_arn (expand)"
		"[root] module.eks.output.fargate_iam_role_name (expand)" -> "[root] module.eks.module.fargate.output.iam_role_name (expand)"
		"[root] module.eks.output.fargate_profile_arns (expand)" -> "[root] module.eks.module.fargate.output.fargate_profile_arns (expand)"
		"[root] module.eks.output.fargate_profile_ids (expand)" -> "[root] module.eks.module.fargate.output.fargate_profile_ids (expand)"
		"[root] module.eks.output.kubeconfig (expand)" -> "[root] module.eks.local.kubeconfig (expand)"
		"[root] module.eks.output.kubeconfig_filename (expand)" -> "[root] module.eks.local_file.kubeconfig (expand)"
		"[root] module.eks.output.node_groups (expand)" -> "[root] module.eks.module.node_groups.output.node_groups (expand)"
		"[root] module.eks.output.oidc_provider_arn (expand)" -> "[root] module.eks.aws_iam_openid_connect_provider.oidc_provider (expand)"
		"[root] module.eks.output.security_group_rule_cluster_https_worker_ingress (expand)" -> "[root] module.eks.aws_security_group_rule.cluster_https_worker_ingress (expand)"
		"[root] module.eks.output.worker_iam_instance_profile_arns (expand)" -> "[root] module.eks.aws_iam_instance_profile.workers (expand)"
		"[root] module.eks.output.worker_iam_instance_profile_arns (expand)" -> "[root] module.eks.aws_iam_instance_profile.workers_launch_template (expand)"
		"[root] module.eks.output.worker_iam_instance_profile_names (expand)" -> "[root] module.eks.aws_iam_instance_profile.workers (expand)"
		"[root] module.eks.output.worker_iam_instance_profile_names (expand)" -> "[root] module.eks.aws_iam_instance_profile.workers_launch_template (expand)"
		"[root] module.eks.output.worker_iam_role_arn (expand)" -> "[root] module.eks.aws_iam_role.workers (expand)"
		"[root] module.eks.output.worker_iam_role_arn (expand)" -> "[root] module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile (expand)"
		"[root] module.eks.output.worker_iam_role_arn (expand)" -> "[root] module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile (expand)"
		"[root] module.eks.output.worker_iam_role_name (expand)" -> "[root] module.eks.aws_iam_role.workers (expand)"
		"[root] module.eks.output.worker_iam_role_name (expand)" -> "[root] module.eks.data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile (expand)"
		"[root] module.eks.output.worker_iam_role_name (expand)" -> "[root] module.eks.data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile (expand)"
		"[root] module.eks.output.worker_security_group_id (expand)" -> "[root] module.eks.local.worker_security_group_id (expand)"
		"[root] module.eks.output.workers_asg_arns (expand)" -> "[root] module.eks.aws_autoscaling_group.workers (expand)"
		"[root] module.eks.output.workers_asg_arns (expand)" -> "[root] module.eks.aws_autoscaling_group.workers_launch_template (expand)"
		"[root] module.eks.output.workers_asg_names (expand)" -> "[root] module.eks.aws_autoscaling_group.workers (expand)"
		"[root] module.eks.output.workers_asg_names (expand)" -> "[root] module.eks.aws_autoscaling_group.workers_launch_template (expand)"
		"[root] module.eks.output.workers_default_ami_id (expand)" -> "[root] module.eks.data.aws_ami.eks_worker (expand)"
		"[root] module.eks.output.workers_launch_template_arns (expand)" -> "[root] module.eks.aws_launch_template.workers_launch_template (expand)"
		"[root] module.eks.output.workers_launch_template_ids (expand)" -> "[root] module.eks.aws_launch_template.workers_launch_template (expand)"
		"[root] module.eks.output.workers_launch_template_latest_versions (expand)" -> "[root] module.eks.aws_launch_template.workers_launch_template (expand)"
		"[root] module.eks.output.workers_user_data (expand)" -> "[root] module.eks.data.template_file.launch_template_userdata (expand)"
		"[root] module.eks.output.workers_user_data (expand)" -> "[root] module.eks.data.template_file.userdata (expand)"
		"[root] module.eks.random_pet.workers (expand)" -> "[root] module.eks.aws_launch_configuration.workers (expand)"
		"[root] module.eks.random_pet.workers (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"]"
		"[root] module.eks.random_pet.workers_launch_template (expand)" -> "[root] module.eks.aws_launch_template.workers_launch_template (expand)"
		"[root] module.eks.random_pet.workers_launch_template (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"]"
		"[root] module.eks.var.attach_worker_cni_policy (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.aws_auth_additional_labels (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_create_endpoint_private_access_sg_rule (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_create_security_group (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_create_timeout (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_delete_timeout (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_enabled_log_types (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_encryption_config (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_endpoint_private_access (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_endpoint_private_access_cidrs (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_endpoint_public_access (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_endpoint_public_access_cidrs (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_iam_role_name (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_log_kms_key_id (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_log_retention_in_days (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_name (expand)" -> "[root] local.cluster_name (expand)"
		"[root] module.eks.var.cluster_name (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_security_group_id (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_service_ipv4_cidr (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.cluster_version (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.config_output_path (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.create_eks (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.create_fargate_pod_execution_role (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.eks_oidc_root_ca_thumbprint (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.enable_irsa (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.fargate_pod_execution_role_name (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.fargate_profiles (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.iam_path (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.kubeconfig_aws_authenticator_additional_args (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.kubeconfig_aws_authenticator_command (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.kubeconfig_aws_authenticator_command_args (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.kubeconfig_aws_authenticator_env_variables (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.kubeconfig_name (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.manage_aws_auth (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.manage_cluster_iam_resources (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.manage_worker_iam_resources (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.map_accounts (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.map_roles (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.map_users (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.node_groups (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.node_groups_defaults (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.permissions_boundary (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.subnets (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.subnets (expand)" -> "[root] module.vpc.output.private_subnets (expand)"
		"[root] module.eks.var.tags (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.vpc_id (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.eks.var.wait_for_cluster_cmd (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.wait_for_cluster_interpreter (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.worker_additional_security_group_ids (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.worker_ami_name_filter (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.worker_ami_name_filter_windows (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.worker_ami_owner_id (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.worker_ami_owner_id_windows (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.worker_create_cluster_primary_security_group_rules (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.worker_create_initial_lifecycle_hooks (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.worker_create_security_group (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.worker_groups (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.worker_groups_launch_template (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.worker_security_group_id (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.worker_sg_ingress_from_port (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.workers_additional_policies (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.workers_group_defaults (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.workers_role_name (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.write_kubeconfig (expand)" -> "[root] module.eks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_network_acl.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_route_table.default (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_security_group.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.database_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.database_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.private_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.private_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.public_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.public_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_route_table_association.outpost (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.azs (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.cgw_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.cgw_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_internet_gateway_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_ipv6_egress_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_nat_gateway_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_group_name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_security_group_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_security_group_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_enable_dns_support (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_instance_tenancy (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_main_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.egress_only_internet_gateway_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_group_name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.igw_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.igw_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.nat_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.nat_public_ips (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.natgw_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_ipv6_egress_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_nat_gateway_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_internet_gateway_ipv6_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_internet_gateway_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_public_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.this_customer_gateway (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vgw_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vgw_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_enable_dns_support (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_cloudwatch_iam_role_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_destination_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_destination_type (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_instance_tenancy (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_ipv6_association_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_ipv6_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_main_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_owner_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_secondary_cidr_blocks (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_kms_key_id (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_name_prefix (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_retention_in_days (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.customer_gateway_tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.customer_gateways (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.create_database_subnet_group (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.database_subnet_group_tags (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_egress (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_ingress (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_name (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_tags (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.manage_default_network_acl (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_propagating_vgws (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_routes (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_tags (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.manage_default_route_table (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_egress (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_ingress (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_name (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_tags (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.manage_default_security_group (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_enable_classiclink (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_enable_dns_support (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_name (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_tags (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.manage_default_vpc (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.local.max_subnet_length (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.var.create_egress_only_igw (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.var.igw_tags (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.local.nat_gateway_count (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.enable_nat_gateway (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.nat_eip_tags (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.reuse_nat_ips (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.var.create_elasticache_subnet_group (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.local.flow_log_destination_arn (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.local.flow_log_iam_role_arn (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_log_format (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_max_aggregation_interval (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_traffic_type (expand)"
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_permissions_boundary (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.var.create_igw (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.var.igw_tags (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.var.public_subnets (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.local.nat_gateway_ips (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.var.nat_gateway_tags (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.var.database_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.var.database_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.var.elasticache_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.var.elasticache_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.var.intra_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.var.intra_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.var.outpost_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.var.outpost_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.var.private_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.var.private_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.var.public_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.var.public_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.var.redshift_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.var.redshift_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" -> "[root] module.vpc.var.database_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" -> "[root] module.vpc.var.database_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" -> "[root] module.vpc.var.elasticache_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" -> "[root] module.vpc.var.elasticache_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" -> "[root] module.vpc.var.intra_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" -> "[root] module.vpc.var.intra_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" -> "[root] module.vpc.var.outpost_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" -> "[root] module.vpc.var.outpost_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" -> "[root] module.vpc.var.private_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" -> "[root] module.vpc.var.private_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" -> "[root] module.vpc.var.public_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" -> "[root] module.vpc.var.public_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" -> "[root] module.vpc.var.redshift_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" -> "[root] module.vpc.var.redshift_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.create_redshift_subnet_group (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_group_tags (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.var.create_database_nat_gateway_route (expand)"
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.var.create_database_nat_gateway_route (expand)"
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.create_database_internet_gateway_route (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.create_database_subnet_route_table (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.database_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.database_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.database_subnets (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.create_elasticache_subnet_route_table (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.elasticache_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnets (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.var.intra_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.var.intra_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.var.intra_subnets (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.local.nat_gateway_count (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.var.private_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.var.private_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.var.public_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.var.public_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.var.public_subnets (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.create_redshift_subnet_route_table (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.redshift_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.redshift_subnets (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_route_table.elasticache (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_route_table_association.intra (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.aws_route_table_association.intra (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.aws_route_table_association.outpost (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.outpost (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.aws_route_table_association.public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table_association.public (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.var.enable_public_redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.var.enable_public_redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnets (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnets (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnets (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_arn (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_az (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnets (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnets (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.map_public_ip_on_launch (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.one_nat_gateway_per_az (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnets (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnets (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.cidr (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_classiclink (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_classiclink_dns_support (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_dns_hostnames (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_dns_support (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_ipv6 (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.instance_tenancy (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.vpc_tags (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_domain_name (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_domain_name_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_netbios_name_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_netbios_node_type (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_ntp_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_tags (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.enable_dhcp_options (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" -> "[root] module.vpc.aws_vpc_dhcp_options.this (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" -> "[root] module.vpc.var.secondary_cidr_blocks (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.amazon_side_asn (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.enable_vpn_gateway (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.vpn_gateway_az (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.vpn_gateway_tags (expand)"
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" -> "[root] module.vpc.var.vpn_gateway_id (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.var.propagate_intra_route_tables_vgw (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.var.propagate_private_route_tables_vgw (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.var.propagate_public_route_tables_vgw (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.local.enable_flow_log (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.var.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.local.enable_flow_log (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.var.create_flow_log_cloudwatch_log_group (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.local.enable_flow_log (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.local.enable_flow_log (expand)" -> "[root] module.vpc.var.enable_flow_log (expand)"
		"[root] module.vpc.local.flow_log_destination_arn (expand)" -> "[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)"
		"[root] module.vpc.local.flow_log_destination_arn (expand)" -> "[root] module.vpc.var.flow_log_destination_arn (expand)"
		"[root] module.vpc.local.flow_log_iam_role_arn (expand)" -> "[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.local.flow_log_iam_role_arn (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_iam_role_arn (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.var.database_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.var.elasticache_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.var.private_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.var.redshift_subnets (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.local.max_subnet_length (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.one_nat_gateway_per_az (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.local.nat_gateway_ips (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.local.nat_gateway_ips (expand)" -> "[root] module.vpc.var.external_nat_ip_ids (expand)"
		"[root] module.vpc.local.vpc_id (expand)" -> "[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)"
		"[root] module.vpc.output.azs (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.output.cgw_arns (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.cgw_ids (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.database_internet_gateway_route_id (expand)" -> "[root] module.vpc.aws_route.database_internet_gateway (expand)"
		"[root] module.vpc.output.database_ipv6_egress_route_id (expand)" -> "[root] module.vpc.aws_route.database_ipv6_egress (expand)"
		"[root] module.vpc.output.database_nat_gateway_route_ids (expand)" -> "[root] module.vpc.aws_route.database_nat_gateway (expand)"
		"[root] module.vpc.output.database_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.output.database_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.output.database_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.database (expand)"
		"[root] module.vpc.output.database_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.output.database_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.database_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnet_group (expand)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] module.vpc.output.database_subnet_group_name (expand)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] module.vpc.output.database_subnets (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.default_network_acl_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_route_table_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_security_group_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_arn (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_cidr_block (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_network_acl_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_route_table_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_security_group_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_enable_dns_support (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_instance_tenancy (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_main_route_table_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.egress_only_internet_gateway_id (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.output.elasticache_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.output.elasticache_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.elasticache_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnet_group (expand)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnet_group_name (expand)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.igw_arn (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.output.igw_id (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.output.intra_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.output.intra_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.output.intra_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.intra (expand)"
		"[root] module.vpc.output.intra_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.output.intra_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.name (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.output.nat_ids (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.output.nat_public_ips (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.output.nat_public_ips (expand)" -> "[root] module.vpc.var.external_nat_ips (expand)"
		"[root] module.vpc.output.natgw_ids (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.output.outpost_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.output.outpost_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.output.outpost_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.private_ipv6_egress_route_ids (expand)" -> "[root] module.vpc.aws_route.private_ipv6_egress (expand)"
		"[root] module.vpc.output.private_nat_gateway_route_ids (expand)" -> "[root] module.vpc.aws_route.private_nat_gateway (expand)"
		"[root] module.vpc.output.private_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.output.private_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.output.private_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.private (expand)"
		"[root] module.vpc.output.private_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.private_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.public_internet_gateway_ipv6_route_id (expand)" -> "[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)"
		"[root] module.vpc.output.public_internet_gateway_route_id (expand)" -> "[root] module.vpc.aws_route.public_internet_gateway (expand)"
		"[root] module.vpc.output.public_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.output.public_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.output.public_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.public (expand)"
		"[root] module.vpc.output.public_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.output.public_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.redshift_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.output.redshift_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.output.redshift_public_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.redshift_public (expand)"
		"[root] module.vpc.output.redshift_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.redshift (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.output.redshift_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnet_group (expand)" -> "[root] module.vpc.aws_redshift_subnet_group.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.this_customer_gateway (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.vgw_arn (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.output.vgw_id (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.output.vgw_id (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.output.vpc_arn (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_cidr_block (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_enable_dns_support (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_flow_log_cloudwatch_iam_role_arn (expand)" -> "[root] module.vpc.local.flow_log_iam_role_arn (expand)"
		"[root] module.vpc.output.vpc_flow_log_destination_arn (expand)" -> "[root] module.vpc.local.flow_log_destination_arn (expand)"
		"[root] module.vpc.output.vpc_flow_log_destination_type (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.output.vpc_flow_log_id (expand)" -> "[root] module.vpc.aws_flow_log.this (expand)"
		"[root] module.vpc.output.vpc_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_instance_tenancy (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_ipv6_association_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_ipv6_cidr_block (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_main_route_table_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_owner_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_secondary_cidr_blocks (expand)" -> "[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)"
		"[root] module.vpc.var.amazon_side_asn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.azs (expand)" -> "[root] data.aws_availability_zones.available (expand)"
		"[root] module.vpc.var.azs (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.cidr (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_internet_gateway_route (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_nat_gateway_route (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_egress_only_igw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_elasticache_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_elasticache_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_igw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_redshift_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_redshift_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_vpc (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.customer_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.customer_gateways (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_egress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_ingress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_propagating_vgws (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_routes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_egress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_ingress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_enable_classiclink (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_enable_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_domain_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_domain_name_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_netbios_name_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_netbios_node_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_ntp_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_classiclink (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_classiclink_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dhcp_options (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dns_hostnames (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_flow_log (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_ipv6 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_nat_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_public_redshift (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_vpn_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.external_nat_ip_ids (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.external_nat_ips (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_iam_role_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_kms_key_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_name_prefix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_retention_in_days (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_destination_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_destination_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_log_format (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_max_aggregation_interval (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_traffic_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.igw_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.instance_tenancy (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_security_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_vpc (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.map_public_ip_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.nat_eip_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.nat_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.one_nat_gateway_per_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_tags (expand)" -> "[root] local.cluster_name (expand)"
		"[root] module.vpc.var.private_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.propagate_intra_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.propagate_private_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.propagate_public_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_tags (expand)" -> "[root] local.cluster_name (expand)"
		"[root] module.vpc.var.public_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.reuse_nat_ips (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.secondary_cidr_blocks (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.single_nat_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_flow_log_permissions_boundary (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_flow_log_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] output.eks_cluster_iam_role_arn" -> "[root] module.eks.output.cluster_iam_role_arn (expand)"
		"[root] output.eks_cluster_iam_role_name" -> "[root] module.eks.output.cluster_iam_role_name (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_group_policy_attachment.attach_EksAllAccess_to_group (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_group_policy_attachment.attach_IamFullKF_to_group (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_group_policy_attachment.attach_IamLimited_to_group (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_autoscaling_group.workers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_autoscaling_group.workers_launch_template (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_iam_openid_connect_provider.oidc_provider (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.module.fargate.aws_eks_fargate_profile.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.module.fargate.aws_iam_role_policy_attachment.eks_fargate_pod (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.module.node_groups.aws_eks_node_group.workers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_network_acl.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_route_table.default (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_security_group.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_flow_log.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.database_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.database_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.private_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.private_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.public_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.public_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_redshift_subnet_group.redshift (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_internet_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_ipv6_egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_nat_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.private_ipv6_egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.private_nat_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.public_internet_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.database (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.elasticache (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.intra (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.outpost (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.private (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.redshift (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.redshift_public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" -> "[root] var.aws_profile"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" -> "[root] var.aws_region"
		"[root] provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" -> "[root] module.eks.kubernetes_config_map.aws_auth (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/kubernetes\"]" -> "[root] data.aws_eks_cluster.cluster (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/kubernetes\"]" -> "[root] data.aws_eks_cluster_auth.cluster (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)" -> "[root] module.eks.local_file.kubeconfig (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.eks.null_resource.wait_for_cluster (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)" -> "[root] module.eks.module.node_groups.random_pet.node_groups (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)" -> "[root] module.eks.random_pet.workers (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)" -> "[root] module.eks.random_pet.workers_launch_template (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/template\"] (close)" -> "[root] module.eks.data.template_file.launch_template_userdata (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/template\"] (close)" -> "[root] module.eks.data.template_file.userdata (expand)"
		"[root] root" -> "[root] meta.count-boundary (EachMode fixup)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/local\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/template\"] (close)"
	}
}

